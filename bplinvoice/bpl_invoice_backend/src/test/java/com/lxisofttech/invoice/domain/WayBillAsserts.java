package com.lxisofttech.invoice.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class WayBillAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertWayBillAllPropertiesEquals(WayBill expected, WayBill actual) {
        assertWayBillAutoGeneratedPropertiesEquals(expected, actual);
        assertWayBillAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertWayBillAllUpdatablePropertiesEquals(WayBill expected, WayBill actual) {
        assertWayBillUpdatableFieldsEquals(expected, actual);
        assertWayBillUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertWayBillAutoGeneratedPropertiesEquals(WayBill expected, WayBill actual) {
        assertThat(expected)
            .as("Verify WayBill auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertWayBillUpdatableFieldsEquals(WayBill expected, WayBill actual) {
        assertThat(expected)
            .as("Verify WayBill relevant properties")
            .satisfies(e -> assertThat(e.getBoxLimit()).as("check boxLimit").isEqualTo(actual.getBoxLimit()))
            .satisfies(e -> assertThat(e.getShipmentType()).as("check shipmentType").isEqualTo(actual.getShipmentType()))
            .satisfies(e -> assertThat(e.getOpfac()).as("check opfac").isEqualTo(actual.getOpfac()))
            .satisfies(e -> assertThat(e.getDeliveryAgent()).as("check deliveryAgent").isEqualTo(actual.getDeliveryAgent()))
            .satisfies(e -> assertThat(e.getEstimatedReadyDate()).as("check estimatedReadyDate").isEqualTo(actual.getEstimatedReadyDate()))
            .satisfies(e -> assertThat(e.getCurrencyUom()).as("check currencyUom").isEqualTo(actual.getCurrencyUom()))
            .satisfies(e -> assertThat(e.getEstimatedShipDate()).as("check estimatedShipDate").isEqualTo(actual.getEstimatedShipDate()))
            .satisfies(e -> assertThat(e.getStatus()).as("check status").isEqualTo(actual.getStatus()))
            .satisfies(e -> assertThat(e.getReferenceNumber()).as("check referenceNumber").isEqualTo(actual.getReferenceNumber()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertWayBillUpdatableRelationshipsEquals(WayBill expected, WayBill actual) {
        assertThat(expected)
            .as("Verify WayBill relationships")
            .satisfies(e -> assertThat(e.getCurrencyType()).as("check currencyType").isEqualTo(actual.getCurrencyType()));
    }
}
