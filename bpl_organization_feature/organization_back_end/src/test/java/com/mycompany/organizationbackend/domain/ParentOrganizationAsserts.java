package com.mycompany.organizationbackend.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class ParentOrganizationAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertParentOrganizationAllPropertiesEquals(ParentOrganization expected, ParentOrganization actual) {
        assertParentOrganizationAutoGeneratedPropertiesEquals(expected, actual);
        assertParentOrganizationAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertParentOrganizationAllUpdatablePropertiesEquals(ParentOrganization expected, ParentOrganization actual) {
        assertParentOrganizationUpdatableFieldsEquals(expected, actual);
        assertParentOrganizationUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertParentOrganizationAutoGeneratedPropertiesEquals(ParentOrganization expected, ParentOrganization actual) {
        assertThat(expected)
            .as("Verify ParentOrganization auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertParentOrganizationUpdatableFieldsEquals(ParentOrganization expected, ParentOrganization actual) {
        assertThat(expected)
            .as("Verify ParentOrganization relevant properties")
            .satisfies(e -> assertThat(e.getName()).as("check name").isEqualTo(actual.getName()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertParentOrganizationUpdatableRelationshipsEquals(ParentOrganization expected, ParentOrganization actual) {
        // empty method
    }
}
